name: Release Container

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build-publish:
    runs-on: ubuntu-latest
    env:
      ORG: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      REGISTRY: ghcr.io
      INDEX_REPO: ${{ vars.INDEX_REPO }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU & Buildx
        uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract version
        id: v
        run: echo "ver=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT
      - name: Build & Push (multi-arch)
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ env.ORG }}/${{ env.REPO_NAME }}:${{ steps.v.outputs.ver }}
            ghcr.io/${{ env.ORG }}/${{ env.REPO_NAME }}:latest
          labels: |
            org.opencontainers.image.version=${{ steps.v.outputs.ver }}
      - name: Install cosign & syft
        run: |
          curl -sSL https://raw.githubusercontent.com/sigstore/cosign/main/install.sh | sudo bash
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sudo sh -s -- -b /usr/local/bin
      - name: Cosign sign (tag)
        run: |
          cosign sign ghcr.io/${{ env.ORG }}/${{ env.REPO_NAME }}:${{ steps.v.outputs.ver }}
          cosign sign ghcr.io/${{ env.ORG }}/${{ env.REPO_NAME }}:latest
      - name: SBOM attach
        run: |
          syft ghcr.io/${{ env.ORG }}/${{ env.REPO_NAME }}:${{ steps.v.outputs.ver }} -o spdx-json > sbom.json
          cosign attach sbom --sbom sbom.json ghcr.io/${{ env.ORG }}/${{ env.REPO_NAME }}:${{ steps.v.outputs.ver }}
      - name: Prepare env for index update
        run: |
          echo "DIGEST=${{ steps.build.outputs.digest }}" >> $GITHUB_ENV
          echo "VISIBILITY=$(jq -r .repository.isPrivate <<< ${{ toJson(github) }})" >> $GITHUB_ENV || true
      - name: Update module-index (open PR)
        if: env.INDEX_REPO != ""
        env:
          GH_TOKEN: ${{ secrets.INDEX_TOKEN }}
          ORG: ${{ env.ORG }}
          REPO_NAME: ${{ env.REPO_NAME }}
          VER: ${{ steps.v.outputs.ver }}
          DIGEST: ${{ env.DIGEST }}
          INDEX_REPO: ${{ vars.INDEX_REPO }}
          REGISTRY: ${{ env.REGISTRY }}
        run: |
          if [ -z "$GH_TOKEN" ]; then
            echo "INDEX_TOKEN missing; skipping index update."
            exit 0
          fi
          gh repo clone "${ORG}/${INDEX_REPO}"
          cd "${INDEX_REPO}"
          if [ ! -f index.json ]; then
            echo "{\"version\":\"\",\"modules\":{}}" > index.json
          fi
          python3 .github/scripts/update_index.py
          BR="update-${REPO_NAME}-${VER}"
          git checkout -b "$BR"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add index.json
          git commit -m "index: ${REPO_NAME} ${VER} (${DIGEST})"
          git push -u origin HEAD
          gh pr create --title "Update index for ${REPO_NAME} ${VER}" --body "Auto-generated by ${REPO_NAME} release"
